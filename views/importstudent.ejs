<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>List of Course</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css" rel="stylesheet">
        <link rel="stylesheet" href="../assets/css/navbar.css">
        <link rel="stylesheet" href="../assets/css/page-layout.css">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
        <link href="https://fonts.googleapis.com/css2?family=Titillium+Web:ital@1&display=swap" rel="stylesheet">
        <link rel="stylesheet" href="../assets/css/bootstrap.min.css">
        <link rel="stylesheet" href="../assets/css/listcourses.css">
        <script src="../assets/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script type="text/javascript" src="https://unpkg.com/xlsx@0.15.1/dist/xlsx.full.min.js"></script>
    </head>
    
    <body>
        <div class="flex-row">
            <div class="nav">
                <div class="sidebar">
                    <img src="/assets/images/สัญลักษณ์ประจำมหาวิทยาลัยแม่ฟ้าหลวง.png" width="50,70">
                    <p class="text-center" style="color: #A60303;">MFU</p>
                    <hr>
                    <li style="color: #A60303;">Admin</li>
                    <li class="mt-5"> <a href="/dashboardadmin"><i class="bi bi-bar-chart"></i></a> </li>
                    <li class="mt-5"><a href="/listadmin"><i class="bi bi-map"></i></a></li>
                    <li class="mt-5"><a href="/importstudent"><i class="bi bi-person-plus-fill"></i></a></li>
                    <li class="mt-5"><a href="/commuadmin"><i class="bi bi-chat"></i></a></li>
                    <li class="logout"><a href="/home"><i class="bi bi-box-arrow-right"></i></a></li>
                </div>
            </div>
        </div>
    
        <div class="col">
            <h1 class="head text-left" style="color: #A60303;">Import Students</h1>
            <hr class="list">
            <form class="b">
                <label for="fileUpload" class="form-label"><strong>Select an Excel File:</strong></label>
                <input type="file" id="fileUpload" class="form-control" accept=".xls, .xlsx" />
            </form>
            <button class="btn btn-primary" id="uploadButton">Upload</button>
            <div id="uploadStatus" class="mt-4"></div>
        </div>
    
        <div id="uploadedData" class="container-fluid mt-5"></div>

    <script>
        // Page initialization
        document.addEventListener('DOMContentLoaded', () => {
            const storedData = localStorage.getItem('uploadedData');
            if (storedData) {
                displayTable(JSON.parse(storedData));
            }
        });

        // Upload Button Event Listener
        document.getElementById('uploadButton').addEventListener('click', () => {
            const fileInput = document.getElementById('fileUpload');
            const file = fileInput.files[0];

            if (!file) {
                Swal.fire({
                    icon: 'warning',
                    title: 'No File Selected',
                    text: 'Please choose a file before clicking upload.'
                });
                return;
            }

            const formData = new FormData();
            formData.append('file', file);

            fetch('/api/import', {
                method: 'POST',
                body: formData,
            })
            .then(response => response.json())
            .then(data => {
                Swal.fire({
                    icon: 'success',
                    title: 'Upload Successful',
                    text: data.message || 'File uploaded successfully.',
                });

                if (data.data) {
                    localStorage.setItem('uploadedData', JSON.stringify(data.data));
                    displayTable(data.data);
                } else {
                    document.getElementById('uploadedData').innerHTML = `
                        <div class="alert alert-warning">No data available to display.</div>`;
                }
            })
            .catch(error => {
                Swal.fire({
                    icon: 'error',
                    title: 'Upload Failed',
                    text: error.message,
                });
            });
        });

        // Delete Record Function
        const fetchData = () => {
        fetch('/api/getAllData')
            .then(response => {
                if (!response.ok) throw new Error('Network response was not OK');
                return response.json();
            })
            .then(data => {
                console.log('Data fetched:', data); // Debugging: Log fetched data
                displayTable(data);
            })
            .catch(error => {
                console.error('Error fetching data:', error);
                Swal.fire('Error', 'Failed to fetch data. Please try again.', 'error');
            });
    };

    // Display table with delete buttons
    const displayTable = (data) => {
        const uploadedDataDiv = document.getElementById('uploadedData');

        // Check if data is empty
        // if (!data || data.length === 0) {
        //     uploadedDataDiv.innerHTML = `
        //         <div class="alert alert-warning text-center">No data available to display.</div>`;
        //     return;
        // }

        // Create table structure
        let tableHTML = `
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Email</th>
                        <th>Course Code</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
        `;

        // Populate table rows with delete buttons
        data.forEach(row => {
            tableHTML += `
                <tr>
                    <td>${row.email || 'N/A'}</td>
                    <td>${row.courseCode || 'N/A'}</td>
                    <td>
                        <a
                        <button class="btn btn-danger" onclick="deleteRecord('${row.email}', '${row.courseCode}')">
                            Delete
                        </button>
                    </td>
                </tr>
            `;
        });

        tableHTML += '</tbody></table>';
        uploadedDataDiv.innerHTML = tableHTML;
    };

    // Delete record
    const deleteRecord = (email, courseCode) => {
        Swal.fire({
            icon: 'warning',
            title: 'Are you sure?',
            text: 'This will delete the student record.',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it',
        }).then(result => {
            if (result.isConfirmed) {
                fetch('/api/deleteData', {
                    method: 'DELETE',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ email, courseCode }),
                })
                .then(response => {
                    if (!response.ok) throw new Error('Failed to delete record');
                    return response.json();
                })
                .then(() => {
                    Swal.fire('Deleted!', 'The record has been deleted.', 'success');
                    fetchData(); // Refresh the table
                })
                .catch(error => {
                    console.error('Error deleting record:', error);
                    Swal.fire('Error', 'Failed to delete the record.', 'error');
                });
            }
        });
    };

    // Fetch data on page load
    document.addEventListener('DOMContentLoaded', fetchData);
</script>
</body>
</html>
